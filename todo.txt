) add more complex charts to webapp

) model run page run queue ux improvements:
  * progress
  * nicer table
  * no double info for same key
) camp_params.csv remove computed parameters from csv to code
) move R code that generates params to python
) setup mongo + impl parameter store and model result store
) better info page in model run in webapp
) add profile customization, convert to table form
) TODO: add save csv specific to model
) #TODO: make specific to model
) add flask cache ideally using azure infra + local
) github PR model
) add azure authentication
) convert run model page to use form
) add validation / better ux in profile change page
) improve performance of    report = generate_csv(sols_raw, p, input_type='raw') to remove need of saving dataframe


B) move camp params generator to python (now in notebook)
B) parameter generator to populate into Mongo

*) cleanup cm.initialise_parameters.py


Completed/in progress:
abstract params
abstract models a bit
cleanup data input / profile
parallel model exec with dask
azure integration
console runner
webapp

webapp run queue
hash for params
*param change
